/* Name: Marlan McInnes-Taylor
Date: 10/22/16
Section: 20
Assignment: 4
Due Date: 10/22/16
About this project: This program runs a simple Rock, Paper, and Scissors game. The user input a value of
					r, p, or s, and this value is compared to a corresponding selection by the computer.
					The winner of the game is displayed after each round. When the user chooses to quit, 
					the game statistics are displayed. This includes win, loss, and tie totals, along with
					the the percentage of each result.
Assumptions: Assumes correct user input
All work below was performed by Marlan McInnes-Taylor */

#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <ctime>

using namespace std;

//Prototype game function and game results function
void playRPS (char, char &);
bool GameResults (int, int, int);

int main() 
{
	char userChoice, result = '\0';        //Variables for user's input choice, and to store current game result
	int wins = 0, losses = 0, ties = 0;    //Variables to store totals for wins, losses, and ties
	bool gamePerformance;				   //Variable to control exit text behavior

	srand((unsigned int) time(0));
	
	cout << "Welcome to COP3014 ROCK PAPER SCISSORS!" << endl << endl;

	do
	{
		//Prompt user to enter their choice in order to play game, entering q will quit game
		cout << "Please select:" << endl
		        << "Rock(r), Paper(p), or Scissors(s)?" << endl
		        << "Or enter q to quit --> ";
		cin >> userChoice;

		
		/*Assess user input. Either run the playRPS function,
        GameResults function, or prompt for correct use input*/
		switch(userChoice)
		{
			//Send user choice of ROCK, PAPER, or SCISSORS to playRPS function
			case 'R':
			case 'r':
			case 'P':
			case 'p':
			case 'S':
			case 's':
			{
				playRPS(userChoice, result);
				break;
			}
			//Quit option will run the GameResults function
			case 'Q':
			case 'q':
			{
				/*GameResults function returns true or false value to performanceResult
				which controls game exit text*/
				gamePerformance = GameResults (wins, losses, ties);
				continue;
			}
			/*If a user does not enter a correct menu value, they are prompted to do so
             until correct input is entered*/
            default:
			{
				cout << "Please enter r, p, or s" << endl << endl;
				continue;
			}
		}

		//The updated result value is assessed and the game counter is updated to track wins, losses, and ties
        if(result == 'w')
			wins++;
		else if(result == 'l')
			losses++;
		else
			ties++;
        
	}while(userChoice != 'q' && userChoice != 'Q');
    
    //gamePerformance is assessed for truth value which controls program exit message
	if(gamePerformance)
		cout << "You played great!" << endl;
	else
		cout << "Meh..." << endl;
    
    //Default exit message displays regardless of game results
	cout << "Thanks for playing!" << endl;
	return 0;
}

//Function runs the Rock, Paper Scissors game
void playRPS(char userChoice, char & result)
{	
	//Computer's Rock, Paper, or Scissors choice is generated by rand function
    int compChoice = rand() % 3;
 
	//Compres user input to computer's input, game result is recored and made available in main
	switch(compChoice)
	{
		case 0:	//Rock
		{
			cout <<  "The computer chose... ROCK!" << endl;
			switch (userChoice)
			{
				case 'R':
				case 'r':
				{
					cout << "You also chose ROCK!" << endl;
					cout << "You TIED!" << endl << endl;
					result = 't';
					break;
				}
		
				case 'P':
				case 'p':
				{
					cout << "You chose PAPER!" << endl;
					cout << "You WIN!" << endl << endl;
					result = 'w';
					break;
				}
				case 'S':
				case 's':
				{
					cout << "You chose SCISSORS!" << endl;
					cout << "You LOSE!" << endl << endl;
					result = 'l';
					break;
				}
			}
			break;
		}
		case 1:	//Paper
		{
			cout << "The computer chose... PAPER!" << endl;
			switch(userChoice)
			{
				case 'R':
				case 'r':
				{
					cout << "You chose ROCK!" << endl;
					cout << "You LOSE!" << endl << endl;
					result = 'l';
					break;
				}
				case 'P':
				case 'p':
				{
					cout << "You also chose PAPER!" << endl;
					cout << "You TIED!" << endl << endl;
					result = 't';
					break;
				}
				case 'S':
				case 's':
				{
					cout << "You chose SCISSORS!" << endl;
					cout << "You WIN!" << endl << endl;
					result = 'w';
					break;
				}
			}
			break;
		}
		case 2:	//Scissors
		{
			cout <<  "The computer chose... SCISSORS!" << endl;
			switch (userChoice)
			{
				case 'R':
				case 'r':
				{
					cout << "You chose ROCK!" << endl;
					cout << "You WIN!" << endl << endl;
					result = 'w';
					break;
				}
				case 'P':
				case 'p':
				{
					cout << "You chose PAPER!" << endl;
					cout << "You LOSE!" << endl << endl;
					result = 'l';
					break;
				}
				case 'S':
				case 's':
				{
					cout << "You also chose SCISSORS!" << endl;
					cout << "You TIED!" << endl << endl;
					result = 't';
					break;
				}
			}
			break;
		}
	}
}


//Function controls the outputting of game results
bool GameResults(int wins, int losses, int ties)
{
	bool performanceResult;
    double totalGames = wins + losses + ties, winPercentage = 0, lossPercentage = 0, tiePercentage = 0;

	cout << fixed << showpoint << setprecision(2);
    
	//Game percentages are calculated if the number of games played is greater than 0
    if(totalGames > 0)
    {
        winPercentage = (wins / totalGames) * 100;
        lossPercentage = (losses / totalGames) * 100;
        tiePercentage = (ties / totalGames) * 100;
    }
    //Display the number of wins, losses, and ties, along with percentage of each result
    cout << endl << "\t\tTotals\t\tPercentage" << endl;
	cout << "------------------------------------------" << endl;
	cout << " Wins\t\t" << wins << "\t\t" << winPercentage << "%" << endl;
	cout << " Losses\t\t" << losses << "\t\t" << lossPercentage << "%" << endl;
	cout << " Ties\t\t" << ties << "\t\t" << tiePercentage << "%" << endl;
	cout << "------------------------------------------" << endl;
	cout << "Total games played: " << static_cast<int>(totalGames) << endl <<endl;
    
    //performanceResult's truth value controls game quit message
	if(wins > losses)
		performanceResult = true;
	else
		performanceResult = false;
    
	return performanceResult;
}	













